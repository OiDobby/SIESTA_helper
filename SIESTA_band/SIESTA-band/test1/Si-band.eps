%!PS-Adobe-2.0 EPSF-2.0
%%Title: Si-band.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Wed Feb 19 16:56:43 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Si-band.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (jin)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb 19 16:56:43 2020)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
840 840 M
63 0 V
6128 0 R
-63 0 V
stroke
756 840 M
[ [(Times Roman) 300.0 0.0 true true 0 (-4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
840 1076 M
31 0 V
6160 0 R
-31 0 V
840 1312 M
63 0 V
6128 0 R
-63 0 V
stroke
756 1312 M
[ [(Times Roman) 300.0 0.0 true true 0 (-3)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
840 1549 M
31 0 V
6160 0 R
-31 0 V
840 1785 M
63 0 V
6128 0 R
-63 0 V
stroke
756 1785 M
[ [(Times Roman) 300.0 0.0 true true 0 (-2)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
840 2021 M
31 0 V
6160 0 R
-31 0 V
840 2257 M
63 0 V
6128 0 R
-63 0 V
stroke
756 2257 M
[ [(Times Roman) 300.0 0.0 true true 0 (-1)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
840 2493 M
31 0 V
6160 0 R
-31 0 V
840 2730 M
63 0 V
6128 0 R
-63 0 V
stroke
756 2730 M
[ [(Times Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
840 2966 M
31 0 V
6160 0 R
-31 0 V
840 3202 M
63 0 V
6128 0 R
-63 0 V
stroke
756 3202 M
[ [(Times Roman) 300.0 0.0 true true 0 ( 1)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
840 3438 M
31 0 V
6160 0 R
-31 0 V
840 3674 M
63 0 V
6128 0 R
-63 0 V
stroke
756 3674 M
[ [(Times Roman) 300.0 0.0 true true 0 ( 2)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
840 3910 M
31 0 V
6160 0 R
-31 0 V
840 4147 M
63 0 V
6128 0 R
-63 0 V
stroke
756 4147 M
[ [(Times Roman) 300.0 0.0 true true 0 ( 3)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
840 4383 M
31 0 V
6160 0 R
-31 0 V
840 4619 M
63 0 V
6128 0 R
-63 0 V
stroke
756 4619 M
[ [(Times Roman) 300.0 0.0 true true 0 ( 4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
4.000 UL
LTa
LCa setrgbcolor
840 840 M
0 3779 V
stroke
1.000 UL
LTb
LCb setrgbcolor
840 840 M
0 63 V
0 3716 R
0 -63 V
stroke
840 700 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4.000 UL
LTa
LCa setrgbcolor
3003 840 M
0 3779 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3003 840 M
0 63 V
0 3716 R
0 -63 V
stroke
3003 700 M
[ [(Times Roman) 300.0 0.0 true true 0 (K)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4.000 UL
LTa
LCa setrgbcolor
4085 840 M
0 3779 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4085 840 M
0 63 V
0 3716 R
0 -63 V
stroke
4085 700 M
[ [(Times Roman) 300.0 0.0 true true 0 (M)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4.000 UL
LTa
LCa setrgbcolor
5536 840 M
0 3779 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5536 840 M
0 63 V
0 3716 R
0 -63 V
stroke
5536 700 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4.000 UL
LTa
LCa setrgbcolor
840 2730 M
6191 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
840 4619 N
840 840 L
6191 0 V
0 3779 V
-6191 0 V
Z stroke
LCb setrgbcolor
266 2729 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times Roman) 360.0 0.0 true true 0 (E-E)]
[(Times Roman) 288.0 -108.0 true true 0 (F)]
[(Times Roman) 360.0 0.0 true true 0 ( \(eV\))]
] -84.0 MCshow
grestore
LTb
LCb setrgbcolor
3935 280 M
[ [(Times Roman) 360.0 0.0 true true 0 (Wave Vector)]
] -120.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
% End plot #1
% Begin plot #2
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
1660 840 M
1 3 V
102 295 V
103 302 V
103 302 V
102 293 V
103 268 V
102 207 V
103 84 V
118 -62 V
119 -162 V
118 -224 V
119 -257 V
118 -274 V
119 -283 V
118 -287 V
85 -205 V
2889 0 R
54 123 V
80 185 V
79 189 V
80 192 V
79 195 V
80 194 V
79 190 V
80 179 V
79 155 V
80 110 V
79 42 V
% End plot #2
% Begin plot #3
stroke
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
840 1985 M
103 4 V
102 12 V
103 19 V
102 28 V
103 35 V
103 42 V
102 50 V
103 56 V
102 62 V
103 66 V
103 66 V
102 64 V
103 54 V
102 37 V
103 14 V
118 -44 V
119 -111 V
118 -143 V
119 -154 V
118 -153 V
119 -144 V
118 -133 V
119 -120 V
118 -106 V
119 -90 V
118 -75 V
118 -59 V
119 -42 V
118 -25 V
119 -8 V
59 -7 V
59 -20 V
60 -31 V
59 -40 V
59 -45 V
59 -48 V
59 -49 V
60 -48 V
59 -45 V
21 -14 V
983 0 R
67 68 V
79 91 V
79 100 V
80 108 V
79 115 V
80 120 V
79 125 V
80 129 V
79 131 V
80 131 V
79 129 V
80 125 V
79 116 V
80 104 V
79 85 V
80 56 V
79 21 V
% End plot #3
% Begin plot #4
stroke
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
840 1985 M
103 4 V
102 12 V
103 19 V
102 28 V
103 35 V
103 42 V
102 50 V
103 56 V
102 62 V
103 66 V
103 66 V
102 64 V
103 54 V
102 37 V
103 14 V
118 -44 V
119 -110 V
118 -144 V
119 -154 V
118 -153 V
119 -144 V
118 -133 V
119 -120 V
118 -106 V
119 -90 V
118 -75 V
118 -59 V
119 -42 V
118 -25 V
119 -8 V
59 -7 V
59 -20 V
60 -31 V
59 -40 V
59 -45 V
59 -48 V
59 -49 V
60 -48 V
59 -45 V
21 -14 V
472 0 R
21 21 V
80 82 V
79 89 V
80 93 V
79 98 V
80 100 V
79 103 V
80 103 V
79 103 V
79 101 V
80 98 V
79 95 V
80 91 V
79 86 V
80 81 V
79 75 V
80 70 V
79 63 V
80 57 V
79 49 V
80 40 V
79 30 V
80 19 V
79 7 V
% End plot #4
% Begin plot #5
stroke
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
840 3321 M
103 5 V
102 15 V
103 25 V
102 34 V
103 42 V
103 51 V
102 57 V
103 64 V
102 66 V
103 65 V
103 57 V
102 39 V
103 5 V
102 -46 V
103 -19 V
118 -16 V
119 -49 V
118 -79 V
119 -103 V
118 -114 V
119 -116 V
118 -111 V
119 -100 V
118 -85 V
119 -67 V
118 -47 V
118 -26 V
119 -3 V
118 22 V
119 48 V
59 13 V
59 37 V
60 61 V
59 81 V
59 100 V
59 114 V
59 128 V
60 139 V
59 149 V
59 157 V
59 163 V
60 169 V
59 170 V
59 160 V
29 43 V
89 0 R
21 -16 V
79 -70 V
80 -108 V
79 -103 V
80 -97 V
79 -89 V
80 -80 V
79 -72 V
80 -64 V
79 -55 V
79 -46 V
80 -37 V
79 -29 V
80 -21 V
79 -13 V
80 -5 V
79 1 V
80 6 V
79 10 V
80 13 V
79 13 V
80 11 V
79 7 V
80 5 V
79 1 V
% End plot #5
% Begin plot #6
stroke
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
840 4192 M
103 5 V
102 12 V
103 19 V
102 22 V
103 20 V
103 11 V
102 -7 V
103 -31 V
102 -56 V
103 -78 V
103 -90 V
102 -89 V
103 -77 V
102 -53 V
103 -19 V
118 56 V
119 145 V
118 202 V
119 235 V
93 200 V
68 0 R
76 -97 V
118 -244 V
119 -247 V
118 -234 V
119 -211 V
118 -186 V
118 -158 V
119 -131 V
118 -102 V
119 -74 V
59 13 V
59 37 V
60 61 V
59 81 V
59 100 V
59 114 V
59 128 V
60 139 V
59 149 V
59 157 V
59 163 V
60 169 V
59 170 V
59 160 V
29 43 V
123 0 R
66 -70 V
80 -47 V
79 -38 V
80 -29 V
79 -20 V
80 -8 V
79 2 V
80 14 V
79 20 V
79 20 V
80 3 V
79 -15 V
80 -30 V
79 -41 V
80 -49 V
79 -57 V
80 -61 V
79 -66 V
80 -68 V
79 -70 V
80 -72 V
79 -81 V
80 -55 V
79 -20 V
% End plot #6
% Begin plot #7
stroke
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
840 4192 M
103 5 V
102 12 V
103 19 V
102 22 V
103 20 V
103 11 V
102 -7 V
103 -31 V
102 -56 V
103 -78 V
103 -90 V
102 -89 V
103 -77 V
102 -43 V
103 -29 V
118 56 V
119 145 V
118 202 V
119 235 V
93 200 V
2860 0 R
33 -3 V
39 3 V
474 0 R
43 -78 V
80 -138 V
79 -130 V
80 -123 V
79 -113 V
80 -100 V
79 -72 V
80 -59 V
79 -25 V
% End plot #7
% Begin plot #8
stroke
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
2129 4619 M
45 -100 V
102 -148 V
103 -47 V
118 58 V
119 146 V
64 91 V
4083 0 R
30 -59 V
79 -127 V
80 -81 V
79 -28 V
% End plot #8
% Begin plot #9
stroke
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #9
% Begin plot #10
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #10
% Begin plot #11
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #11
% Begin plot #12
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #12
% Begin plot #13
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #13
% Begin plot #14
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #14
% Begin plot #15
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #15
% Begin plot #16
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #16
% Begin plot #17
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #17
% Begin plot #18
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #18
% Begin plot #19
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #19
% Begin plot #20
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #20
% Begin plot #21
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #21
% Begin plot #22
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #22
% Begin plot #23
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #23
% Begin plot #24
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #24
% Begin plot #25
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #25
% Begin plot #26
4.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #26
1.000 UL
LTb
LCb setrgbcolor
840 4619 N
840 840 L
6191 0 V
0 3779 V
-6191 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
